--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib and sb repository lol

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v94=v5(v83,v19);v19=nil;return v94;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0 -(0 + 0) ;local v85;while true do if (v84==(0 -0)) then v85=(v31/((3 -1)^(v32-1)))%(2^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v85-(v85%(569 -(367 + (1078 -(282 + 595))))) ;end end else local v86=2^(v32-(928 -(214 + 713))) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or 0 ;end end local function v21() local v34=1637 -(1523 + 114) ;local v35;while true do if (v34==1) then return v35;end if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + ((1271 -(226 + 1044)) -(0 -0)) ;v34=1066 -((185 -(32 + 85)) + 997) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v37 * (57 + 199)) + v36 ;end local function v23() local v38=957 -(892 + 48 + 17) ;local v39;local v40;local v41;local v42;while true do if (v38==(2 -(3 -2))) then return (v42 * (31011612 -14234396)) + (v41 * (120312 -54776)) + (v40 * (1208 -(802 + 150))) + v39 ;end if (v38==(350 -(87 + 263))) then v39,v40,v41,v42=v1(v16,v18,v18 + (183 -(67 + 113)) );v18=v18 + 3 + 1 ;v38=2 -(2 -1) ;end end end local function v24() local v43=0 -(885 -(261 + 624)) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(1 + 0)) then v46=(1773 -775) -(915 + 82) ;v47=(v20(v45,(7 -5) -1 ,12 + 8 ) * ((2 -0)^((2299 -(1020 + 60)) -(1069 + 118)))) + v44 ;v43=(14 -10) -(861 -(814 + 45)) ;end if (v43==(3 -1)) then v48=v20(v45,4 + 17 ,54 -23 );v49=((v20(v45,32 + 0 )==((2683 -1891) -(368 + 423))) and  -(3 -2)) or (19 -((24 -14) + 8)) ;v43=3;end if (v43==((0 + 0) -0)) then v44=v23();v45=v23();v43=443 -((1431 -1015) + 26) ;end if (v43==3) then if (v48==((1747 -(760 + 987)) -0)) then if (v47==(0 + 0)) then return v49 * (0 -0) ;else v48=439 -(145 + 293) ;v46=430 -(3 + 41 + 137 + 249) ;end elseif (v48==(3533 -(998 + 488))) then return ((v47==((1913 -(1789 + 124)) + 0)) and (v49 * ((1 + 0)/(772 -(201 + 571))))) or (v49 * NaN) ;end return v8(v49,v48-(2161 -(116 + 1022)) ) * (v46 + (v47/((8 -6)^(31 + 21)))) ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(766 -(745 + 21))) then return "";end end v51=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;local v52={};for v66=1 + 0 , #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0 -0 ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (v53== #"|") then local v90=(function() return 166 -(9 + 157) ;end)();local v91=(function() return;end)();while true do if (v90==0) then v91=(function() return 0;end)();while true do if (2==v91) then v53=(function() return 2;end)();break;end if (v91==(0 -0)) then v58=(function() return v23();end)();v59=(function() return {};end)();v91=(function() return 1;end)();end if (v91==1) then for v113= #"]",v58 do local v114=(function() return 0;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114==0) then v115=(function() return 0;end)();v116=(function() return nil;end)();v114=(function() return 1825 -(1195 + 629) ;end)();end if (v114==1) then v117=(function() return nil;end)();while true do if (v115==(1 -0)) then if (v116== #"<") then v117=(function() return v21()~=0 ;end)();elseif (v116==2) then v117=(function() return v24();end)();elseif (v116== #"xxx") then v117=(function() return v25();end)();end v59[v113]=(function() return v117;end)();break;end if (v115~=0) then else local v289=(function() return 0;end)();while true do if (v289==1) then v115=(function() return 242 -(187 + 54) ;end)();break;end if (v289==0) then v116=(function() return v21();end)();v117=(function() return nil;end)();v289=(function() return 1;end)();end end end end break;end end end v57[ #"91("]=(function() return v21();end)();v91=(function() return 2;end)();end end break;end end end if (v53==(782 -(162 + 618))) then for v95= #"}",v23() do local v96=(function() return v21();end)();if (v20(v96, #"/", #"[")==0) then local v103=(function() return 0;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if ((0 + 0)~=v103) then else local v109=(function() return 0 + 0 ;end)();local v110=(function() return;end)();while true do if (v109==0) then v110=(function() return 0 -0 ;end)();while true do if (v110~=(1 -0)) then else v103=(function() return 1;end)();break;end if (v110==(0 + 0)) then v104=(function() return 1636 -(1373 + 263) ;end)();v105=(function() return nil;end)();v110=(function() return 1001 -(451 + 549) ;end)();end end break;end end end if (v103~=(1 + 0)) then else local v111=(function() return 0 -0 ;end)();local v112=(function() return;end)();while true do if (v111~=0) then else v112=(function() return 0 -0 ;end)();while true do if (v112~=1) then else v103=(function() return 1386 -(746 + 638) ;end)();break;end if ((0 + 0)==v112) then v106=(function() return nil;end)();v107=(function() return nil;end)();v112=(function() return 1 -0 ;end)();end end break;end end end if (v103==(343 -(218 + 123))) then while true do if (v104== #"<") then local v118=(function() return 1581 -(1535 + 46) ;end)();while true do if (v118==(0 + 0)) then v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==(560 -(306 + 254))) then local v302=(function() return 0 + 0 ;end)();local v303=(function() return;end)();while true do if ((0 -0)==v302) then v303=(function() return 0;end)();while true do if (v303~=(1467 -(899 + 568))) then else v107[ #"nil"]=(function() return v22();end)();v107[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v105== #":") then v107[ #"19("]=(function() return v23();end)();elseif (v105==(2 + 0)) then v107[ #"91("]=(function() return v23() -(2^16) ;end)();elseif (v105== #"19(") then local v355=(function() return 0 -0 ;end)();local v356=(function() return;end)();while true do if ((603 -(268 + 335))==v355) then v356=(function() return 0;end)();while true do if (v356==(290 -(60 + 230))) then v107[ #"19("]=(function() return v23() -(2^(588 -(426 + 146))) ;end)();v107[ #"?id="]=(function() return v22();end)();break;end end break;end end end v118=(function() return 1;end)();end if (v118==(1 + 0)) then v104=(function() return 2;end)();break;end end end if (v104~=(1458 -(282 + 1174))) then else local v119=(function() return 811 -(569 + 242) ;end)();while true do if (v119~=(2 -1)) then else v104=(function() return  #"91(";end)();break;end if (v119~=0) then else if (v20(v106, #":", #"}")~= #">") then else v107[2]=(function() return v59[v107[1 + 1 ]];end)();end if (v20(v106,1026 -(706 + 318) ,1253 -(721 + 530) )~= #"~") then else v107[ #"xxx"]=(function() return v59[v107[ #"nil"]];end)();end v119=(function() return 1;end)();end end end if ( #"asd"~=v104) then else if (v20(v106, #"19(", #"asd")== #"~") then v107[ #"0836"]=(function() return v59[v107[ #"http"]];end)();end v54[v95]=(function() return v107;end)();break;end if (v104==(1271 -(945 + 326))) then local v121=(function() return 0 -0 ;end)();local v122=(function() return;end)();while true do if (v121~=0) then else v122=(function() return 0 + 0 ;end)();while true do if (v122==(700 -(271 + 429))) then v105=(function() return v20(v96,2, #"-19");end)();v106=(function() return v20(v96, #"0313",6);end)();v122=(function() return 1 + 0 ;end)();end if (v122~=1) then else v104=(function() return  #":";end)();break;end end break;end end end end break;end end end end for v97= #" ",v23() do v55[v97-#">" ]=(function() return v28();end)();end return v57;end if (v53==(1500 -(1408 + 92))) then local v92=(function() return 0;end)();local v93=(function() return;end)();while true do if (v92~=(1086 -(461 + 625))) then else v93=(function() return 0;end)();while true do if (v93==(1289 -(993 + 295))) then v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v93=(function() return 2;end)();end if (v93~=0) then else v54=(function() return {};end)();v55=(function() return {};end)();v93=(function() return 1172 -(418 + 753) ;end)();end if ((1 + 1)==v93) then v53=(function() return  #"/";end)();break;end end break;end end end end end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[1 + 1 ];local v65=v60[1 + 2 ];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1 + 0 ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=529 -(406 + 123) ,v76 do if (v87>=v70) then v74[v87-v70 ]=v75[v87 + (1770 -(1749 + 20)) ];else v78[v87]=v75[v87 + 1 + 0 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1323 -((3660 -2411) + (1909 -(1045 + 791))) ];if ((v81<=(11 + 18)) or (2003>3834)) then if ((v81<=(1159 -(466 + 679))) or (156>3913)) then if (v81<=6) then if (v81<=(4 -2)) then if ((v81<=(0 -0)) or (3620>=4891)) then v78[v80[1902 -(106 + 1794) ]][v80[1 + (4 -2) ]]=v80[4];elseif (v81>(1 + 0)) then for v240=v80[5 -3 ],v80[3] do v78[v240]=nil;end else v78[v80[5 -3 ]][v80[117 -(4 + 110) ]]=v80[(897 -309) -(57 + 527) ];end elseif (v81<=(1431 -(41 + 1386))) then if ((195==195) and (v81>(106 -(17 + 86)))) then v78[v80[2 + 0 ]]=v80[(511 -(351 + 154)) -3 ]~=(0 -(1574 -(1281 + 293))) ;else local v132=v80[168 -(122 + (310 -(28 + 238))) ];local v133,v134=v71(v78[v132](v78[v132 + (1 -0) ]));v73=(v134 + v132) -1 ;local v135=0 -0 ;for v242=v132,v73 do local v243=0;while true do if (v243==(0 -0)) then v135=v135 + 1 + 0 ;v78[v242]=v133[v135];break;end end end end elseif ((3105>=1796) and (v81==(1 + 4))) then if ((4258>937) and (v80[2]==v78[v80[7 -3 ]])) then v72=v72 + 1 ;else v72=v80[1562 -(1381 + 178) ];end else local v136=v69[v80[3]];local v137;local v138={};v137=v10({},{__index=function(v244,v245) local v246=v138[v245];return v246[66 -(30 + 35) ][v246[2 + 0 ]];end,__newindex=function(v247,v248,v249) local v250=v138[v248];v250[1][v250[2]]=v249;end});for v252=1258 -(979 + 64 + 214) ,v80[15 -11 ] do local v253=1212 -(323 + 889) ;local v254;while true do if ((4379>=2131) and (v253==(2 -1))) then if ((v254[581 -(361 + 219) ]==(331 -(53 + 267))) or (4869<906)) then v138[v252-(1 + 0 + 0) ]={v78,v254[11 -8 ]};else v138[v252-(1 + 0 + 0) ]={v61,v254[3]};end v77[ #v77 + (851 -(20 + 830)) ]=v138;break;end if ((3844>=2043) and (v253==(0 + 0))) then v72=v72 + (127 -(116 + 10)) ;v254=v68[v72];v253=1 + 0 ;end end end v78[v80[740 -(542 + 133 + 63) ]]=v29(v136,v137,v62);end elseif (v81<=(21 -11)) then if ((v81<=8) or (3232<=2731)) then if ((v81==7) or (1225>4228)) then v78[v80[1 + 1 ]]=v80[4 -1 ];else v78[v80[2]]=v80[2 + 1 ]~=0 ;end elseif (v81==(4 + 5)) then v78[v80[2]]=v78[v80[3]][v80[4]];else for v255=v80[2],v80[7 -4 ] do v78[v255]=nil;end end elseif (v81<=(30 -18)) then if (v81>11) then local v145=v80[1553 -(1126 + 425) ];v78[v145]=v78[v145](v78[v145 + 1 ]);else v78[v80[407 -(118 + 287) ]]=v78[v80[(1167 -(1074 + 82)) -8 ]];end elseif ((4905==4905) and (v81>(1134 -(118 + 1003)))) then local v149=0 -0 ;local v150;while true do if (v149==(377 -(142 + 235))) then v150=v80[9 -(14 -7) ];v78[v150](v78[v150 + 1 ]);break;end end else local v151=v80[2];v78[v151]=v78[v151](v13(v78,v151 + 1 ,v73));end elseif (v81<=(5 + 16)) then if ((v81<=((2778 -(214 + 1570)) -(553 + 424))) or (4136>=4411)) then if ((3328>2238) and (v81<=(28 -13))) then local v125=0 + 0 ;local v126;local v127;while true do if ((3839>1405) and (v125==(1 + 0))) then for v291=1, #v77 do local v292=0 + (1455 -(990 + 465)) ;local v293;while true do if (v292==(0 + 0)) then v293=v77[v291];for v340=0 + 0 , #v293 do local v341=v293[v340];local v342=v341[2 -1 ];local v343=v341[2];if (((v342==v78) and (v343>=v126)) or (2958==4017)) then v127[v343]=v342[v343];v341[2 -1 ]=v127;end end break;end end end break;end if (v125==0) then v126=v80[2];v127={};v125=2 -1 ;end end elseif ((v81>(5 + 11)) or (1293<=507)) then local v153=0;local v154;while true do if ((1228>=813) and ((v153==(0 -0)) or (2896<805))) then v154=v80[2];v78[v154](v78[v154 + (754 -(239 + 514)) ]);break;end end else v78[v80[1 + 1 ]]();end elseif ((2316==2316) and (v81<=19)) then if ((v81>18) or (2570==1533)) then v78[v80[1331 -(797 + 220 + 312) ]]={};else local v156=v80[2 + 0 ];local v157={v78[v156](v13(v78,v156 + (2 -1) ,v73))};local v158=1202 -(373 + 829) ;for v258=v156,v80[4] do local v259=731 -(476 + 255) ;while true do if ((v259==0) or (883==1460)) then v158=v158 + 1 ;v78[v258]=v157[v158];break;end end end end elseif (v81>(1150 -(359 + 10 + 761))) then if (v78[v80[2 + 0 ]] or (3455>4050)) then v72=v72 + (1 -0) ;else v72=v80[3];end else local v159=0 -0 ;local v160;while true do if (v159==(238 -(64 + 174))) then v160=v80[(3 -2) + 1 ];v78[v160](v13(v78,v160 + (1 -0) ,v80[339 -(144 + (1918 -(1668 + 58))) ]));break;end end end elseif (v81<=(241 -(42 + 174))) then if (v81<=(18 + 5)) then if (v81>(19 + 3)) then v61[v80[2 + 1 ]]=v78[v80[1506 -(363 + 1141) ]];else local v163=v80[1582 -(1183 + 397) ];local v164=v78[v80[8 -5 ]];v78[v163 + 1 + 0 ]=v164;v78[v163]=v164[v80[4]];end elseif (v81==(18 + 6)) then v72=v80[1978 -(1913 + (688 -(512 + 114))) ];else local v169=v80[2 + 0 ];v78[v169]=v78[v169](v13(v78,v169 + 1 ,v80[(18 -11) -4 ]));end elseif ((243==243) and (v81<=27)) then if (v81==(1959 -(565 + 1368))) then local v171=v80[7 -5 ];v78[v171]=v78[v171](v13(v78,v171 + (1662 -(1477 + 184)) ,v80[3]));else do return;end end elseif ((v81>(37 -9)) or (4619<=999) or (271>1572)) then v78[v80[2 + 0 ]]=v29(v69[v80[(1775 -916) -(564 + 292) ]],nil,v62);else local v174=v80[2 -(0 -0) ];local v175,v176=v71(v78[v174](v13(v78,v174 + (2 -1) ,v80[307 -(114 + 130 + 60) ])));v73=(v176 + v174) -(1 + 0) ;local v177=476 -(41 + 435) ;for v260=v174,v73 do v177=v177 + (1002 -(938 + 63)) ;v78[v260]=v175[v177];end end elseif (v81<=(34 + 10)) then if ((v81<=(1161 -(936 + 189))) or (3410>4116)) then if ((v81<=(11 + 21)) or (903>=3059)) then if (v81<=(1643 -(1565 + 48))) then if (v78[v80[2 + 0 ]]==v80[1142 -(782 + 356) ]) then v72=v72 + (268 -(176 + 91)) ;else v72=v80[7 -4 ];end elseif ((2739<3293) and (v81>(45 -(3 + 11)))) then v78[v80[1094 -(975 + 117) ]][v80[(1633 + 245) -(157 + 1718) ]]=v78[v80[4 + (0 -0) ]];else v78[v80[6 -4 ]]=v80[10 -7 ];end elseif ((v81<=(1052 -(697 + (2315 -(109 + 1885))))) or (3942<1134)) then if ((v81==((1558 -(1269 + 200)) -56)) or (3976<2857)) then local v183=v80[3 -1 ];local v184=v80[8 -4 ];local v185=v183 + 1 + 1 ;local v186={v78[v183](v78[v183 + (2 -1) ],v78[v185])};for v263=1228 -(322 + 905) ,v184 do v78[v185 + v263 ]=v186[v263];end local v187=v186[612 -(602 + 9) ];if v187 then v78[v185]=v187;v72=v80[1192 -(449 + 740) ];else v72=v72 + (873 -(826 + 46)) ;end else local v188=v80[2];local v189=v80[4];local v190=v188 + (949 -(245 + 702)) ;local v191={v78[v188](v78[v188 + (3 -2) ],v78[v190])};for v266=1 + 0 ,v189 do v78[v190 + v266 ]=v191[v266];end local v192=v191[1899 -(260 + 1638) ];if ((4930>2307) and v192) then v78[v190]=v192;v72=v80[443 -(382 + 58) ];else v72=v72 + (3 -2) ;end end elseif (v81==(30 + 5)) then local v193=0 -0 ;local v194;local v195;while true do if ((0 -0)==v193) then v194=v80[1207 -(902 + 303) ];v195={};v193=1 -0 ;end if (((2 -1)==v193) or (4046<1291) or (2693==4973)) then for v325=1 + 0 , #v77 do local v326=v77[v325];for v333=1690 -(1121 + 569) , #v326 do local v334=214 -(22 + 192) ;local v335;local v336;local v337;while true do if ((v334==1) or (4241==3545)) then v337=v335[2];if (((v336==v78) and (v337>=v194)) or (4048>4232)) then v195[v337]=v336[v337];v335[684 -(483 + 200) ]=v195;end break;end if (v334==(1463 -(1404 + 59))) then v335=v326[v333];v336=v335[2 -1 ];v334=(827 -(802 + 24)) -0 ;end end end end break;end end else v78[v80[767 -(468 + 297) ]][v80[565 -(334 + 228) ]]=v78[v80[4]];end elseif ((2146==2146) and ((v81<=(134 -(161 -67))) or (1750>=3473))) then if ((v81<=(47 -9)) or (2244==3224)) then if (v81>37) then local v198=0 -0 ;local v199;while true do if (v198==(0 + 0)) then v199=v80[2];v78[v199]=v78[v199](v78[v199 + (1 -0) ]);break;end end else local v200=v69[v80[1 + 2 ]];local v201;local v202={};v201=v10({},{__index=function(v269,v270) local v271=v202[v270];return v271[237 -(141 + 95) ][v271[2 + 0 ]];end,__newindex=function(v272,v273,v274) local v275=v202[v273];v275[2 -1 ][v275[4 -2 ]]=v274;end});for v277=1,v80[1 + 3 + 0 ] do local v278=0 -0 ;local v279;while true do if (((3166==3166) and ((1 + 0)==v278)) or (4904<=1916)) then if (v279[1 + 0 + 0 ]==11) then v202[v277-(1 -(0 + 0)) ]={v78,v279[2 + 1 ]};else v202[v277-(1 -(0 + 0)) ]={v61,v279[3]};end v77[ #v77 + (2 -1) ]=v202;break;end if (v278==0) then v72=v72 + 1 + 0 ;v279=v68[v72];v278=850 -(254 + 595) ;end end end v78[v80[128 -(55 + 71) ]]=v29(v200,v201,v62);end elseif (v81==(50 -11)) then local v204=v80[2];local v205={v78[v204](v13(v78,v204 + (1791 -(573 + 1217)) ,v73))};local v206=0 -0 ;for v280=v204,v80[1 + 0 + 3 ] do v206=v206 + (1 -0) ;v78[v280]=v205[v206];end else v78[v80[2]]=v61[v80[942 -(714 + 225) ]];end elseif ((1763<3724) and (v81<=(122 -80))) then if (v81==((41 + 15) -(8 + 7))) then v78[v80[1 + 1 ]]={};else v61[v80[3]]=v78[v80[2 -0 ]];end elseif (v81==(849 -((1551 -(797 + 636)) + 688))) then if ((90<=1065) and (v80[2]==v78[v80[52 -(25 + 23) ]])) then v72=v72 + 1 + 0 ;else v72=v80[1889 -((4500 -3573) + 959) ];end else local v212=v80[2];local v213,v214=v71(v78[v212](v78[v212 + (3 -2) ]));v73=(v214 + v212) -1 ;local v215=732 -(16 + 716) ;for v283=v212,v73 do local v284=0 -0 ;while true do if ((4802==4802) and (v284==(97 -(11 + (1705 -(1427 + 192)))))) then v215=v215 + 1 ;v78[v283]=v213[v215];break;end end end end elseif ((57<=2723) and (v81<=52)) then if ((v81<=(116 -68)) or (2070==443) or (2280<=511)) then if ((v81<=((115 + 216) -(175 + 110))) or (1676<=463)) then if (v81==(113 -68)) then v78[v80[9 -7 ]]=v61[v80[1799 -(503 + (3001 -1708)) ]];else local v218=v80[2];v78[v218](v13(v78,v218 + (2 -1) ,v80[3]));end elseif (v81>(31 + 3 + 13)) then local v219=1061 -(810 + 251) ;local v220;while true do if ((0 + 0 + 0)==v219) then v220=v80[2];v78[v220]=v78[v220]();break;end end elseif ((3869==3869) and v78[v80[1 + 1 ]]) then v72=v72 + 1 + 0 ;else v72=v80[536 -((369 -(192 + 134)) + (1766 -(316 + 960))) ];end elseif ((1158<=2613) and (v81<=(783 -(711 + 22)))) then if (v81>49) then v72=v80[11 -8 ];else local v222=859 -(240 + 619) ;local v223;local v224;while true do if (v222==(1 + 0)) then v78[v223 + (1 -0) ]=v224;v78[v223]=v224[v80[1 + 2 + 1 ]];break;end if ((v222==0) or (2364<=1999)) then v223=v80[1746 -(1344 + 400) ];v224=v78[v80[408 -(255 + 116 + 34) ]];v222=1 + 0 + 0 ;end end end elseif (v81==(194 -143)) then v78[v80[2 + 0 ]]=v78[v80[12 -9 ]][v80[12 -8 ]];else v78[v80[1741 -(404 + (1886 -(83 + 468))) ]]();end elseif (v81<=(462 -(183 + 223))) then if ((v81<=(64 -10)) or (4922<194)) then if ((v81>(36 + 17)) or (2705==1393)) then do return;end else local v227=v80[1 + 1 ];local v228,v229=v71(v78[v227](v13(v78,v227 + ((2144 -(1202 + 604)) -(10 + (1526 -1199))) ,v80[(4 -1) + 0 ])));v73=(v229 + v227) -(339 -(118 + 220)) ;local v230=0 + 0 ;for v285=v227,v73 do v230=v230 + (450 -(108 + 341)) ;v78[v285]=v228[v230];end end elseif (v81>(25 + 30)) then v78[v80[8 -6 ]]=v62[v80[(4141 -2645) -(711 + 782) ]];elseif ((v78[v80[3 -(326 -(45 + 280)) ]]==v80[473 -(270 + 199) ]) or (4601<61) or (2091<31)) then v72=v72 + 1 ;else v72=v80[1 + 2 + 0 ];end elseif ((v81<=58) or (1390>=4744)) then if (v81>((1639 + 237) -(580 + 453 + 786))) then v78[v80[5 -3 ]]=v29(v69[v80[3 + 0 ]],nil,v62);else local v234=v80[1 + 0 + 1 ];v78[v234]=v78[v234](v13(v78,v234 + 1 + 0 ,v73));end elseif (v81==(153 -(17 + 77))) then local v236=v80[2 + 0 ];v78[v236]=v78[v236]();else v78[v80[1169 -((1194 -549) + 522) ]]=v62[v80[1793 -((2921 -(340 + 1571)) + 780) ]];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
